plugins {
    id 'application'
}

dependencies {
    implementation 'com.typesafe.akka:akka-actor-typed_2.13:2.6.4'
    implementation 'com.typesafe.akka:akka-cluster-typed_2.13:2.6.4'
    implementation 'com.typesafe.akka:akka-slf4j_2.13:2.6.4'
    implementation 'com.typesafe.akka:akka-serialization-jackson_2.13:2.6.4'
    implementation 'com.pi4j:pi4j-core:1.2'
    implementation 'org.scala-lang.modules:scala-xml_2.13:2.0.0-M1'
    implementation 'com.typesafe.play:play-json_2.13:2.8.1'

    testImplementation 'com.typesafe.akka:akka-actor-testkit-typed_2.13:2.6.4'
}

application {
    mainClassName = 'com.buransky.ostrostroj.app.Main'
}

sourceSets {
    sysTest {
        scala.srcDir file('src/sysTest/scala')
        resources.srcDir file('src/sysTest/resources')
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    sysTestImplementation.extendsFrom testImplementation
    sysTestRuntimeOnly.extendsFrom runtimeOnly
}

/**
 * System tests. They are supposed to be run directly on Odroid C2 under root user using JDK built for ARMHF
 * (not ARM64!).
 */
task sysTestDevice(dependsOn: ['sysTestClasses'], type: JavaExec) {
    description = 'Runs system tests.'
    group = 'verification'

    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/sysTest', '-o']
    jvmArgs = ['-DOSTROSTROJ_PLAYLIST=' + file('src/sysTest/resources/systest-playlist/systest-playlist.json'),
    '-DDEV_DEVICE']
    classpath = sourceSets.sysTest.runtimeClasspath
}

task sysTestDesktop(dependsOn: ['sysTestClasses'], type: JavaExec) {
    description = 'Runs system tests.'
    group = 'verification'

    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/sysTest', '-o']
    jvmArgs = ['-DOSTROSTROJ_PLAYLIST=' + file('src/sysTest/resources/systest-playlist/systest-playlist.json'),
               '-DDEV_DESKTOP']
    classpath = sourceSets.sysTest.runtimeClasspath
}

task runDevDesktop(type: JavaExec) {
    description = 'Runs Ostrostroj in developer mode with desktop cluster role.'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    main = application.mainClassName
    jvmArgs = ['-Ddev-desktop']
    standardInput = System.in
}

task runDevDevice(type: JavaExec) {
    description = 'Runs Ostrostroj in developer mode with device cluster role.'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    main = application.mainClassName
    jvmArgs = ['-Ddev-device']
}